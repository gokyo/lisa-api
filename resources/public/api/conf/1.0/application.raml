#%RAML 1.0
---

title: Lifetime ISA
version: 1.0
protocols: [ HTTPS ]
baseUri: http://api.service.hmrc.gov.uk

documentation:
  - title: Overview
    content: !include documentation/overview.md
  - title: Versioning
    content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/versioning.md
  - title: Errors
    content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/errors.md
  - title: Testing the API
    content: !include documentation/testing-approach.md

uses:
  sec: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/securitySchemes.raml
  headers: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/headers.raml
  annotations: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/annotations.raml

mediaType: [ application/json, application/hal+json ]

types:
  IDtype:
    pattern: "^\\d{10}$"
  LISAManagerReferenceNumberType:
    pattern: "^Z([0-9]{4}|[0-9]{6})$"
  accountIdType:
    "pattern": "^[a-zA-Z0-9 :\\-]{1,20}$"

/lifetime-isa:
  /manager:
    description: This resource models the existence of a registered LISA Manager organisation.
      It is created by HMRC as a result of a LISA registration.  The registration process is not
      part of the API specification as it is a forms based process with manual verification by HMRC staff.

    /{lisaManagerReferenceNumber}:
      uriParameters:
        lisaManagerReferenceNumber:
          type : LISAManagerReferenceNumberType
          description: The number given to the LISA provider when they applied for approval from HMRC.
          example: "Z1234"
      get:
                  is: [headers.acceptHeader]
                  displayName: Discover available endpoints
                  description: This allows LISA provider to discover all the available endpoints.
                  (annotations.scope): "read:lisa"
                  securedBy: [ sec.oauth_2_0: { scopes: [ "read:lisa" ] } ]
                  (annotations.sandboxData): !include testdata/discover-endpoints.md
                  responses:
                    200:
                      body:
                        application/json:
                          type: !include schemas/LISAManager.get.schema.json
                          example: !include examples/LISAManager.get.json
                    400:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            InvalidLmrn:
                              description: Invalid Lisa Manager Reference Number
                              value: |
                                {
                                  "code" : "BAD_REQUEST",
                                  "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                }
      /investors:
            post:
              is: [headers.acceptHeader, headers.contentHeader]
              displayName: Create a LISA investor
              description: !include documentation/LISAInvestor.post
              (annotations.scope): "write:lisa"
              securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
              (annotations.sandboxData): !include testdata/lisa-create-investor.md
              body:
                application/json:
                  example: !include examples/LISAInvestor.post.json
                  type: !include schemas/LISAInvestor.post.schema.json
              responses:
                201:
                  description: The LISA investor resource has been created.
                  body:
                    application/json:
                      example: !include examples/LISAInvestor.post.response.json

                400:
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                        notOpenStatus:
                          description: Bad Request
                          value: |
                            {
                              "code" : "BAD_REQUEST",
                              "message" : "Bad Request"
                            }
                        InvalidLmrn:
                          description: Invalid Lisa Manager Reference Number
                          value: |
                            {
                              "code" : "BAD_REQUEST",
                              "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                            }
                401:
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                        notOpenStatus:
                          description: The lisaManagerReferenceNumber path parameter you've used doesn't match with an authorised LISA provider in HMRC's records.
                          value: |
                            {
                              "code" : "UNAUTHORIZED",
                              "message" : "lisaManagerReferenceNumber is not authorised"
                            }
                403:
                  body:
                    application/json:
                      description: The investor details given do not match with HMRC’s records
                      type: !include schemas/ErrorCodes.schema.json
                      example: |
                        {
                          "code": "INVESTOR_NOT_FOUND",
                          "message": "The investor details given do not match with HMRC’s records."
                        }
                409:
                  description: Matches already existing resource.
                    Response contains a location header with link to the existing resource.
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                        recordExists:
                          description: The investor already has a record with HMRC
                          value: |
                            {
                              "code" : "INVESTOR_ALREADY_EXISTS",
                              "message" : "The investor already has a record with HMRC."
                            }
      /accounts:
        description: !include documentation/LISAAccount
        post:
          is: [headers.acceptHeader, headers.contentHeader]
          description: !include documentation/LISAAccount
          displayName: Create or transfer a LISA account
          (annotations.scope): "write:lisa"
          securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
          (annotations.sandboxData): !include testdata/create-account.md
          body:
            application/json:
              type: !include schemas/LISAAccount.post.schema.json
              example: !include examples/LISAAccount.post.json
          responses:
            201:
              headers:
                Location:
                  description: relative URI to the created LISA Account resource
                  type: string
                  example: /lifetime-isa/manager/Z876543/accounts/acc654321
              body:
                application/json:
                  example: !include examples/LISAAccount.post.response.json
            400:
              body:
                application/json:
                  type: !include schemas/ErrorCodes.schema.json
                  examples:
                    badRequest:
                      description: Bad Request
                      value: |
                        {
                          "code" : "BAD_REQUEST",
                          "message" : "Bad Request"
                        }
                    InvalidLmrn:
                      description: Invalid Lisa Manager Reference Number
                      value: |
                        {
                          "code" : "BAD_REQUEST",
                          "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                        }
            401:
              body:
                application/json:
                  type: !include schemas/ErrorCodes.schema.json
                  examples:
                    notOpenStatus:
                      description: The lisaManagerReferenceNumber path parameter you've used doesn't match with an authorised LISA provider in HMRC's records.
                      value: |
                        {
                          "code" : "UNAUTHORIZED",
                          "message" : "lisaManagerReferenceNumber is not authorised"
                        }
            403:
              body:
                application/json:
                  type: !include schemas/ErrorCodes.schema.json
                  examples:
                    investorNotFound:
                      description: The investorId given does not match with HMRC’s records.
                      value: |
                        {
                          "code" : "INVESTOR_NOT_FOUND",
                          "message" : "invalid status: must create with open status"
                        }
                    outsideAgeRange:
                      description: The investor is not eligible for a LISA account.
                      value: |
                        {
                          "code" : "INVESTOR_ELIGIBILITY_CHECK_FAILED",
                          "message" : "Can't open a LISA if investor is older than 40 or younger than 18"
                         }
                    complianceFail:
                      description: The investor has failed a compliance check - they may have breached  ISA guidelines or regulations.
                      value: |
                        {
                          "code" : "INVESTOR_COMPLIANCE_CHECK_FAILED",
                          "message" : "The investor has failed a compliance check - they may have breached  ISA guidelines or regulations."
                        }
                    prevAccntDoNoExists:
                      description: The transferredFromAccountId and transferredFromLMRN given don’t match with an account on HMRC’s records.
                      value: |
                        {
                          "code" : "PREVIOUS_INVESTOR_ACCOUNT_DOES_NOT_EXIST",
                          "message" : "Previous Investor Account Doesn’t Exist"
                        }
                    noTransferAccntData:
                      description: transferredFromAccountId, transferedFromLMRN and transferInDate are required fields when the creationReason is "Transferred".
                      value: |
                        {
                          "code" : "TRANSFER_ACCOUNT_DATA_NOT_PROVIDED",
                          "message" : "transfer account data not provided"
                        }
                    transferAccntDataProvided:
                      description: transferredFromAccountId, transferedFromLMRN, and transferInDate fields should only be completed when the creationReason is "Transferred".
                      value: |
                        {
                          "code" : "TRANSFER_ACCOUNT_DATA_PROVIDED",
                          "message" : "transfer account data provided"
                        }
                    accountClosedOrVoided:
                      description: The LISA account has already been closed or voided.
                      value: |
                        {
                          "code": "INVESTOR_ACCOUNT_ALREADY_CLOSED_OR_VOID",
                          "message": "The LISA account has already been closed or voided."
                        }
            409:
              body:
                application/json:
                  description: The LISA account already exists
                  type: !include schemas/ErrorCodes.schema.json
                  example: |
                    {
                      "code": "INVESTOR_ACCOUNT_ALREADY_EXISTS",
                      "message": "Investor Account Already Exists"
                    }
        /{accountId}:
              uriParameters:
                accountId:
                  type: accountIdType
                  description: The ID for the account.  This will be generated by the LISAManager and will only
                    be unique when used in combination with lisaManagerReferenceNumber. Any special characters should be URL encoded.
                  example: "ABC12345"
              get:
                  displayName: Retrieve account details
                  description: Retrieve account details by accountId
                  is: [headers.acceptHeader, headers.contentHeader]
                  (annotations.scope): "read:lisa"
                  securedBy: [ sec.oauth_2_0: { scopes: [ "read:lisa" ] } ]
                  responses:
                    200:
                      body:
                        application/json:
                          example: !include examples/LISAAccount.get.json
                          type: !include schemas/LISAAccount.get.schema.json
                    400:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            InvalidLmrn:
                              description: Invalid Lisa Manager Reference Number
                              value: |
                                {
                                  "code" : "BAD_REQUEST",
                                  "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                }
                    401:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            notOpenStatus:
                              description: The lisaManagerReferenceNumber path parameter you've used doesn't match with an authorised LISA provider in HMRC's records.
                              value: |
                                {
                                  "code" : "UNAUTHORIZED",
                                  "message" : "lisaManagerReferenceNumber is not authorised"
                                }
                    404:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            accountIdNOTFound:
                              description: The accountId given does not match with HMRC’s records.
                              value: |
                                {
                                  "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                  "message": "The accountId given does not match with HMRC’s records."
                                }

              /close-account:
                    post:
                      is: [headers.acceptHeader, headers.contentHeader]
                      displayName: Close an existing LISA account
                      description: Close an account and report the reason and date.
                      (annotations.scope): "write:lisa"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                      (annotations.sandboxData): !include testdata/close-account.md
                      body:
                        application/json:
                          type: !include schemas/LISAAccount.close.post.schema.json
                          example: !include examples/LISAAccount.close.post.json
                      responses:
                        200:
                          description: The account is updated successfully.
                          body:
                            application/json:
                              example: !include examples/LISAAccount.put.response.json
                        400:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                badRequest:
                                  description: Bad Request
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "Bad Request"
                                    }
                                InvalidLmrn:
                                  description: Invalid Lisa Manager Reference Number
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                    }
                        401:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: The lisaManagerReferenceNumber path parameter you've used doesn't match with an authorised LISA provider in HMRC's records.
                                  value: |
                                    {
                                      "code" : "UNAUTHORIZED",
                                      "message" : "lisaManagerReferenceNumber is not authorised"
                                    }
                        403:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                accountClosedOrVoided:
                                  description: The LISA account has already been closed or voided.
                                  value: |
                                    {
                                      "code": "INVESTOR_ACCOUNT_ALREADY_CLOSED_OR_VOID",
                                      "message": "The LISA account has already been closed or voided."
                                    }
              /events:
                    description: !include documentation/LifeEvent
                    post:
                      is: [headers.acceptHeader, headers.contentHeader]
                      displayName: Report a life event.
                      description: !include documentation/LifeEvent
                      (annotations.scope): "write:lisa"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                      (annotations.sandboxData): !include testdata/life-event.md
                      body:
                        application/json:
                          type: !include schemas/LifeEvent.post.schema.json
                          example: !include examples/LifeEvent.post.json
                      responses:
                        201:
                          description: The LifeEvent resource has been created.
                          headers:
                            Location:
                              description: relative URI to the created LISA event created.
                              type: string
                              example: /lifetime-isa/manager/Z876543/accounts/acc654321/events/1234567890

                          body:
                            application/json:
                                example: !include examples/LifeEvent.post.response.json
                        400:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: Bad Request
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "Bad Request"
                                    }
                                InvalidLmrn:
                                  description: Invalid Lisa Manager Reference Number
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                    }
                        401:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: The lisaManagerReferenceNumber path parameter you've used doesn't match with an authorised LISA provider in HMRC's records.
                                  value: |
                                    {
                                      "code" : "UNAUTHORIZED",
                                      "message" : "lisaManagerReferenceNumber is not authorised"
                                    }
                        403:
                          description: Matches already existing resource.
                            Response contains a location header with link to the existing resource.
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                lifeEventInvalid:
                                  description: The life event conflicts with previous life event reported.
                                  value: |
                                    {
                                      "code" : "LIFE_EVENT_INAPPROPRIATE",
                                      "message" : "The Life Event conflicts with previous Life Event reported."
                                    }
                                accountClosedOrVoided:
                                  description: The LISA account has already been closed or voided.
                                  value: |
                                    {
                                      "code": "INVESTOR_ACCOUNT_ALREADY_CLOSED_OR_VOID",
                                      "message": "The LISA account has already been closed or voided."
                                    }
                        404:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                accountIdNOTFound:
                                  description: The accountId given does not match with HMRC’s records.
                                  value: |
                                    {
                                      "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                      "message": "The accountId given does not match with HMRC’s records."
                                    }
                        409:
                          body:
                            application/json:
                              description: The investor’s life event has already been reported.
                              type: !include schemas/ErrorCodes.schema.json
                              example: |
                                {
                                      "code" : "LIFE_EVENT_ALREADY_EXISTS",
                                      "message" : "The investor’s life event has already been reported."
                                }
                    /{lifeEventId}:
                      uriParameters:
                        lifeEventId:
                          type: IDtype
                          description: The ID for the life event
                          example: "1234567890"
                      get:
                        is: [headers.acceptHeader, headers.contentHeader]
                        displayName: Retrieve a life event
                        (annotations.sandboxData): !include testdata/life-event-get.md
                        responses:
                          200:
                            body:
                              application/json:
                                example: !include examples/LifeEvent.post.json
                          400:
                            body:
                              application/json:
                                type: !include schemas/ErrorCodes.schema.json
                                examples:
                                  InvalidLmrn:
                                    description: Invalid Lisa Manager Reference Number
                                    value: |
                                      {
                                        "code" : "BAD_REQUEST",
                                        "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                      }

                          401:
                            body:
                              application/json:
                                type: !include schemas/ErrorCodes.schema.json
                                examples:
                                  notOpenStatus:
                                    description: The lisaManagerReferenceNumber path parameter you've used doesn't match with an authorised LISA provider in HMRC's records.
                                    value: |
                                      {
                                        "code" : "UNAUTHORIZED",
                                        "message" : "lisaManagerReferenceNumber is not authorised"
                                      }
                          404:
                            body:
                              application/json:
                                type: !include schemas/ErrorCodes.schema.json
                                examples:
                                  accountIdNOTFound:
                                    description: The accountId given does not match with HMRC’s records.
                                    value: |
                                      {
                                        "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                        "message": "The accountId given does not match with HMRC’s records."
                                      }
              /transactions:
                    description: !include documentation/LISATransaction
                    post:
                      is: [headers.acceptHeader, headers.contentHeader]
                      displayName: Request a bonus payment
                      description: Request a bonus payment from HMRC and provide a reason for the request.
                      (annotations.scope): "write:lisa"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                      (annotations.sandboxData): !include testdata/bonus-payment.md
                      body:
                        application/json:
                          type: !include schemas/BonusPaymentRequest.post.schema.json
                          example: !include examples/BonusPaymentRequest.post.json
                      responses:
                        201:
                          description: The LISA transaction resource has been created.
                          headers:
                            Location:
                              description: relative URI to the created Bonus Payment resource
                              type: string
                              example: /lifetime-isa/manager/Z876543/accounts/acc654321/transactions/7777777777
                          body:
                            application/json:
                              example: !include examples/LISATransaction.post.response.json
                        400:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                badRequest:
                                  description: Bad Request
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "Bad Request"
                                    }
                                InvalidLmrn:
                                  description: Invalid Lisa Manager Reference Number
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                    }
                        401:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: The lisaManagerReferenceNumber path parameter you've used doesn't match with an authorised LISA provider in HMRC's records.
                                  value: |
                                    {
                                      "code" : "UNAUTHORIZED",
                                      "message" : "lisaManagerReferenceNumber is not authorised"
                                    }
                        403:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                forbidden:
                                  description: Request data does not meet business rules.
                                  value: |
                                    {
                                      "code" : "FORBIDDEN",
                                      "message" : "Forbidden"
                                    }
                                lifeEventNotProvided:
                                  description: lifeEventId is required when the claimReason is "Life Event".
                                  value: |
                                    {
                                      "code" : "LIFE_EVENT_NOT_PROVIDED",
                                      "message" : "lifeEventId is required when the claimReason is \"Life Event\"."
                                    }
                                bonusWrong:
                                  description: The bonus information given exceeds the maximum annual amount, the qualifying deposits exceed the maximum annual amount, or the bonus claim doesn't equal the correct percentage of stated qualifying funds.
                                  value: |
                                    {
                                      "code" : "BONUS_CLAIM_ERROR",
                                      "message" : "Bonus Claim Error"
                                    }
                                accountClosedOrVoided:
                                  description: The LISA account has already been closed or voided.
                                  value: |
                                    {
                                      "code": "INVESTOR_ACCOUNT_ALREADY_CLOSED_OR_VOID",
                                      "message": "The LISA account has already been closed or voided."
                                    }
                        404:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                noLifeEvent:
                                  description: The lifeEventId does not match with HMRC’s records.
                                  value: |
                                    {
                                      "code" : "LIFE_EVENT_NOT_FOUND",
                                      "message" : "The lifeEventId does not match with HMRC’s records."
                                    }
                                accountIdNOTFound:
                                  description: The accountId given does not match with HMRC’s records.
                                  value: |
                                    {
                                      "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                      "message": "The accountId given does not match with HMRC’s records."
                                    }
                    /{transactionId}:
                      uriParameters:
                        transactionId:
                          type: integer
                          description: The ID for the transaction.
                          example: 1234567890
                      get:
                        displayName: Retrieve request of a bonus payment resource
                        description: Retrieve request of a bonus payment resource by transactionID
                        is: [headers.acceptHeader, headers.contentHeader]
                        (annotations.scope): "read:lisa"
                        securedBy: [ sec.oauth_2_0: { scopes: [ "read:lisa" ] } ]
                        responses:
                          200:
                            body:
                              application/json:
                                example: |
                                  {
                                    "lifeEventId" : "1234567891",
                                    "periodStartDate" : "2017-04-06",
                                    "periodEndDate" : "2017-05-05",

                                    "htbTransfer" : {
                                      "htbTransferInForPeriod" : 0.00,
                                      "htbTransferTotalYTD" : 0.00
                                    },

                                    "inboundPayments"   :
                                    {
                                      "newSubsForPeriod" : 4000.00,
                                      "newSubsYTD" : 4000.00,
                                      "totalSubsForPeriod" : 4000.00,
                                      "totalSubsYTD" : 4000.00
                                    },

                                    "bonuses"   :
                                    {
                                      "bonusDueForPeriod" : 1000.00,
                                      "totalBonusDueYTD" : 1000.00,
                                      "claimReason" : "Life Event"
                                    }
                                  }
                          400:
                            body:
                              application/json:
                                type: !include schemas/ErrorCodes.schema.json
                                examples:
                                  InvalidLmrn:
                                    description: Invalid Lisa Manager Reference Number
                                    value: |
                                      {
                                        "code" : "BAD_REQUEST",
                                        "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                      }

                          401:
                            body:
                              application/json:
                                type: !include schemas/ErrorCodes.schema.json
                                examples:
                                  notOpenStatus:
                                    description: The lisaManagerReferenceNumber path parameter you've used doesn't match with an authorised LISA provider in HMRC's records.
                                    value: |
                                      {
                                        "code" : "UNAUTHORIZED",
                                        "message" : "lisaManagerReferenceNumber is not authorised"
                                      }
                          404:
                            body:
                              application/json:
                                type: !include schemas/ErrorCodes.schema.json
                                examples:
                                  noTransaction:
                                    description: The transactionId does not match with HMRC’s records.
                                    value: |
                                      {
                                        "code" : "TRANSACTION_NOT_FOUND",
                                        "message" : "The transactionId does not match with HMRC’s records."
                                      }
                                  accountIdNOTFound:
                                    description: The accountId given does not match with HMRC’s records.
                                    value: |
                                      {
                                        "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                        "message": "The accountId given does not match with HMRC’s records."
                                      }
