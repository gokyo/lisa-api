#%RAML 1.0
---

title: Lifetime ISA
version: 1.0
protocols: [ HTTPS ]
baseUri: http://api.service.hmrc.gov.uk

documentation:
  - title: Overview
    content: !include documentation/overview.md
  - title: Versioning
    content: !include http://api-documentation-raml-frontend.service/api-documentation/assets/common/docs/versioning.md
  - title: Errors
    content: !include http://api-documentation-raml-frontend.service/api-documentation/assets/common/docs/errors.md

uses:
  sec: http://api-documentation-raml-frontend.service/api-documentation/assets/common/modules/securitySchemes.raml
  headers: http://api-documentation-raml-frontend.service/api-documentation/assets/common/modules/headers.raml
  annotations: http://api-documentation-raml-frontend.service/api-documentation/assets/common/modules/annotations.raml

mediaType: [ application/json, application/hal+json ]

types:
  NINOtype:
    pattern: "^[A-Z]{2}\\d{6}[A-D]$"
  IDtype:
    pattern: "^\\d{10}$"
  LISAManagerReferenceNumberType:
    pattern: "^Z\\d{6}$"
  paymentDirectionType:
    enum: [credit, debit]
  paymentStatusType:
    enum: [pending, submitted, completed]
  paymentMethodType:
    enum : [directDebit, BACS]
  hmrcTransactionType :
    enum: [bonus, charge]
  lisaTransactionType :
    enum: [deposit, withdrawal, HTBtransfer, LISAtransfer, bonusClaim, chargeMade]

/lifetime-isa:
  /manager:
    description: This resource models the existence of a registered LISA Manager organisation.
      It is created by HMRC as a result of a LISA registration.  The registration process is not
      part of the API specification as it is a forms based process with manual verification by HMRC staff.

    /{lisaManagerReferenceNumber}:
      uriParameters:
        lisaManagerReferenceNumber:
          type : LISAManagerReferenceNumberType
          description: The number issued to the LISA provider upon successful LISA registration with HMRC.
          example: "Z123456"
      /investors:
            post:
              is: [headers.acceptHeader, headers.contentHeader]
              displayName: Create a LISA investor
              description: !include documentation/LISAInvestor.post
              (annotations.scope): "write:lisa"
              securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
              body:
                application/json:
                  example: !include examples/LISAInvestor.post.json
                  type: !include schemas/LISAInvestor.post.schema.json
              responses:
                201:
                  description: The LISA investor resource has been created.
                  headers:
                    Location:
                      description: Relative URI to the created LISAAccount resource.
                      type: string
                      example: /investors/0987654321
                400:
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                        notOpenStatus:
                          description: Bad Request
                          value: |
                            {
                              "code" : "BAD_REQUEST",
                              "message" : "Bad Request"
                            }
                403:
                  body:
                    application/json:
                      description: The investor details given do not match with HMRC’s records
                      type: !include schemas/ErrorCodes.schema.json
                      example: |
                        {
                          "code": "INVESTOR_NOT_FOUND",
                          "message": "The investor details given do not match with HMRC’s records."
                        }
                404:
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                        ResourceNotFound:
                          description: Resource Not Found
                          value: |
                            {
                              "code" : "NOT_FOUND",
                              "message" : "Resource Not Found"
                            }
                406:
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                        headerInvalid:
                          description: Accept header invalid
                          value: |
                            {
                              "code" : "ACCEPT_HEADER_INVALID",
                              "message" : "Accept header invalid"
                            }
                409:
                  description: Matches already existing resource.
                    Response contains a location header with link to the existing resource.
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                        recordExists:
                          description: The investor already has a record with HMRC
                          value: |
                            {
                              "code" : "INVESTOR_ALREADY_EXISTS",
                              "message" : "The investor already has a record with HMRC."
                            }
                500:
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                       internalServerError :
                          description: Internal Server Error
                          value: |
                            {
                              "code" : "INTERNAL_SERVER_ERROR",
                              "message" : "Internal Server Error"
                            }


      /accounts:
        description: !include documentation/LISAAccount
        post:
          is: [headers.acceptHeader, headers.contentHeader]
          description: !include documentation/LISAAccount
          displayName: Create or transfer a LISA account
          (annotations.scope): "write:lisa"
          securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
          body:
            application/json:
              type: !include schemas/LISAAccount.post.schema.json
              example: !include examples/LISAAccount.post.json
          responses:
            201:
              headers:
                Location:
                  description: URI to the created LISA account resource.
                  type: string
                  example: /lifetime-isa/manager/{lisaManagerReferenceNumber}/accounts/{accountId}
              body:
                application/json:
                  example: |
                     {
                       "data": {
                         "accountId": "8765432100",
                         "message": "Investor Account Created Late Notification",
                       },
                       "success": true,
                       "status": 201
                     }
            400:
              body:
                application/json:
                  type: !include schemas/ErrorCodes.schema.json
                  examples:
                    badRequest:
                      description: Bad Request
                      value: |
                        {
                          "code" : "BAD_REQUEST",
                          "message" : "Bad Request"
                        }
            403:
              body:
                application/json:
                  type: !include schemas/ErrorCodes.schema.json
                  examples:
                    investorNotFound:
                      description: The investorID given does not match with HMRC’s records.
                      value: |
                        {
                          "code" : "INVESTOR_NOT_FOUND",
                          "message" : "invalid status: must create with open status"
                        }
                    wrongLISAManager:
                      description: The lisaManagerReferenceNumber given does not match with HMRC’s records.
                      value: |
                        {
                          "code" : "WRONG_LISA_MANAGER",
                          "message" : "the lisaManagerReferenceNumber in URI does match match the calling LISAManager"
                        }
                    outsideAgeRange:
                      description: The investor is not eligible for a LISA account.
                      value: |
                        {
                          "code" : "INVESTOR_ELIGIBILITY_CHECK_FAILED",
                          "message" : "Can't open a LISA if investor is older than 40 or younger than 18"
                         }
                    complianceFail:
                      description: TODO
                      value: |
                        {
                          "code" : "INVESTOR_COMPLIANCE_CHECK_FAILED",
                          "message" : "Investor has an active account associated with another provider"
                        }
                    prevAccntDoNoExists:
                      description: The prevAccountID and prevLisaManagerReferenceNumber given don’t match with an account on HMRC’s records.
                      value: |
                        {
                          "code" : "PREVIOUS_INVESTOR_ACCOUNT_DOES_NOT_EXIST",
                          "message" : "Previous Investor Account Doesn’t Exist"
                        }
            404:
              body:
                application/json:
                  type: !include schemas/ErrorCodes.schema.json
                  examples:
                    ResourceNotFound:
                      description: Resource Not Found
                      value: |
                        {
                          "code" : "NOT_FOUND",
                          "message" : "Resource Not Found"
                        }
            406:
              body:
                application/json:
                  type: !include schemas/ErrorCodes.schema.json
                  examples:
                    notOpenStatus:
                      description: Accept header invalid
                      value: |
                        {
                          "code" : "ACCEPT_HEADER_INVALID",
                          "message" : "Accept header invalid"
                        }

            409:
              body:
                application/json:
                  description: The LISA account already exists
                  type: !include schemas/ErrorCodes.schema.json
                  example: |
                    {
                      "code": "INVESTOR_ACCOUNT_ALREADY_EXISTS",
                      "message": "Investor Account Already Exists"
                    }
            500:
              body:
                application/json:
                  type: !include schemas/ErrorCodes.schema.json
                  examples:
                   internalServerError :
                      description: Internal Server Error
                      value: |
                        {
                          "code" : "INTERNAL_SERVER_ERROR",
                          "message" : "Internal Server Error"
                        }

        /{accountID}:
              uriParameters:
                accountID:
                  type: IDtype
                  description: The ID for the account.  This will be generated by the LISAManager and will only
                    be unique when used in combination with lisaManagerReferenceNumber
                  example: "1234567890"

              put:
                  is: [headers.acceptHeader, headers.contentHeader]
                  displayName: Update an existing LISA account
                  description: Close an account and report the reason and date.
                  (annotations.scope): "write:lisa"
                  securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                  body:
                    application/json:
                      type: !include schemas/LISAAccount.put.schema.json
                      example: !include examples/LISAAccount.put.close.json
                  responses:
                    200:
                      description: The account is updated successfully.
                    400:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            badRequest:
                              description: Bad Request
                              value: |
                                {
                                  "code" : "BAD_REQUEST",
                                  "message" : "Bad Request"
                                }

                    403:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            wrongLISAManager:
                              description: The lisaManagerReferenceNumber given does not match with HMRC’s records.
                              value: |
                                {
                                  "code" : "WRONG_LISA_MANAGER",
                                  "message" : "The lisaManagerReferenceNumber given does not match with HMRC’s records."
                                }
                            accountClosed:
                              description: The LISA account is already closed.
                              value: |
                                {
                                  "code" : "INVESTOR_ACCOUNT_ALREADY_CLOSED",
                                  "message" : "The Investor Account is already closed"
                                }

                    404:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            accountIDNOTFound:
                              description: The accountID given does not match with HMRC’s records.
                              value: |
                                {
                                  "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                  "message": "The accountID given does not match with HMRC’s records."
                                }
                            resourceNotFound:
                              description: Resource Not Found
                              value: |
                                {
                                  "code" : "NOT_FOUND",
                                  "message" : "Resource Not Found"
                                }
                    406:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            headerInvalid:
                              description: Accept header invalid
                              value: |
                                {
                                  "code" : "ACCEPT_HEADER_INVALID",
                                  "message" : "Accept header invalid"
                                }
                    500:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                           internalServerError :
                              description: Internal Server Error
                              value: |
                                {
                                  "code" : "INTERNAL_SERVER_ERROR",
                                  "message" : "Internal Server Error"
                                }


              /events:
                    description: !include documentation/LifeEvent
                    post:
                      is: [headers.acceptHeader, headers.contentHeader]
                      displayName: Report a life event.
                      description: !include documentation/LifeEvent
                      (annotations.scope): "write:lisa"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                      body:
                        application/json:
                          type: !include schemas/LifeEvent.post.schema.json
                          example: !include examples/LifeEvent.post.json
                      responses:
                        201:
                          description: The LifeEvent resource has been created.
                          headers:
                            Location:
                              description: Relative URI to the created Life Event
                              type: string
                              example: /manager/Z876543210/accounts/1234567890/events/3333333333
                        400:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: Bad Request
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "Bad Request"
                                    }

                        403:
                          description: Matches already existing resource.
                            Response contains a location header with link to the existing resource.
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                wrongLisaManager:
                                  description: The lisaManagerReferenceNumber given does not match with HMRC’s records.
                                  value: |
                                    {
                                      "code" : "WRONG_LISA_MANAGER",
                                      "message" : "The LISA manager or the LISA account do not belong to the calling LISA manager"
                                    }
                        409:
                          body:
                            application/json:
                              description: The investor’s life event has already been reported.
                              type: !include schemas/ErrorCodes.schema.json
                              example: |
                                {
                                      "code" : "LIFE_EVENT_ALREADY_EXISTS",
                                      "message" : "The investor’s life event has already been reported."
                                }
                        500:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                               internalServerError :
                                  description: Internal Server Error
                                  value: |
                                    {
                                      "code" : "INTERNAL_SERVER_ERROR",
                                      "message" : "Internal Server Error"
                                    }

              /transactions:
                    description: !include documentation/LISATransaction
                    post:
                      is: [headers.acceptHeader, headers.contentHeader]
                      displayName: Request for a bonus payment
                      description: Request a bonus payment from HMRC and provide a reason for the request.
                      (annotations.scope): "write:lisa"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                      body:
                        application/json:
                          type: !include schemas/BonusPaymentRequest.post.schema.json
                          example: !include examples/BonusPaymentRequest.post.json
                      responses:
                        201:
                          description: The LISA transaction resource has been created.
                          headers:
                            Location:
                              description: Relative URI to the created LISA transaction resource
                              type: string
                              example: /manager/Z876543210/accounts/1234567890/transactions/3333333333
                        200:
                           body:
                              application/json:
                                example: |
                                   {
                                     "data": {
                                       "transactionId": "3333333333",
                                       "message": "Bonus transaction created - Late Notification",
                                     },
                                     "success": true,
                                     "status": 200
                                   }
                        400:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                badRequest:
                                  description: Bad Request
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "Bad Request"
                                    }

                        403:
                          description: Matches already existing resource.
                            Response contains a location header with link to the existing resource.
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                wrongLisaManager:
                                  description: The lisaManagerReferenceNumber given does not match with HMRC’s records.
                                  value: |
                                    {
                                      "code" : "WRONG_LISA_MANAGER",
                                      "message" : "The lisaManagerReferenceNumber given does not match with HMRC’s records."
                                    }
                                noLifeEvent:
                                  description: The lifeEventID does not match with HMRC’s records.
                                  value: |
                                    {
                                      "code" : "LIFE_EVENT_DOES_NOT_EXISTS",
                                      "message" : "The lifeEventID does not match with HMRC’s records."
                                    }
                                bonusWrong:
                                  description:  The bonus information given exceeds the maximum annual amount.
                                                The qualifying deposits exceed the maximum annual amount.
                                                The bonus claim doesn't equal 25% of stated qualifying funds.
                                  value: |
                                    {
                                      "code" : "BONUS_CLAIM_ERROR",
                                      "message" : "Bonus Claim Error"
                                    }
                        404:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                accountIDNOTFound:
                                  description: The accountID given does not match with HMRC’s records.
                                  value: |
                                    {
                                      "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                      "message": "The accountID given does not match with HMRC’s records."
                                    }
                                resourceNotFound:
                                  description: Resource Not Found
                                  value: |
                                    {
                                      "code" : "NOT_FOUND",
                                      "message" : "Resource Not Found"
                                    }
                        406:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                headerInvalid:
                                  description: Accept header invalid
                                  value: |
                                    {
                                      "code" : "ACCEPT_HEADER_INVALID",
                                      "message" : "Accept header invalid"
                                    }

                        500:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                               internalServerError :
                                  description: Internal Server Error
                                  value: |
                                    {
                                      "code" : "INTERNAL_SERVER_ERROR",
                                      "message" : "Internal Server Error"
                                    }
