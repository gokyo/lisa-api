#%RAML 1.0
---

title: Lifetime ISA
version: 1.0
protocols: [ HTTPS ]
baseUri: http://api.service.hmrc.gov.uk

documentation:
  - title: Overview
    content: !include documentation/overview.md
  - title: Versioning
    content: !include http://api-documentation-raml-frontend.service/api-documentation/assets/common/docs/versioning.md
  - title: Errors
    content: !include http://api-documentation-raml-frontend.service/api-documentation/assets/common/docs/errors.md

uses:
  sec: http://api-documentation-raml-frontend.service/api-documentation/assets/common/modules/securitySchemes.raml
  headers: http://api-documentation-raml-frontend.service/api-documentation/assets/common/modules/headers.raml
  annotations: http://api-documentation-raml-frontend.service/api-documentation/assets/common/modules/annotations.raml

mediaType: [ application/json, application/hal+json ]

types:
  NINOtype:
    pattern: "^[A-Z]{2}\\d{6}[A-D]$"
  IDtype:
    pattern: "^\\d{10}$"
  LISAManagerReferenceNumberType:
    pattern: "^Z\\d{6}$"
  paymentDirectionType:
    enum: [credit, debit]
  paymentStatusType:
    enum: [pending, submitted, completed]
  paymentMethodType:
    enum : [directDebit, BACS]
  hmrcTransactionType :
    enum: [bonus, charge]
  lisaTransactionType :
    enum: [deposit, withdrawal, HTBtransfer, LISAtransfer, bonusClaim, chargeMade]

/lifetime-isa:
  /manager:
    description: This resource models the existence of a registered LISA Manager organisation.
      It is created by HMRC as a result of a LISA registration.  The registration process is not
      part of the API specification as it is a forms based process with manual verification by HMRC staff.

    /{lisaManagerReferenceNumber}:
      uriParameters:
        lisaManagerReferenceNumber:
          type : LISAManagerReferenceNumberType
          description: The number issued to the LISA provider upon successful LISA registration with HMRC.
          example: "Z123456"
      /investors:
            post:
              is: [headers.acceptHeader, headers.contentHeader]
              displayName: Create a LISA investor
              description: !include documentation/LISAInvestor.post
              (annotations.scope): "write:lisa"
              securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
              body:
                application/json:
                  example: !include examples/LISAInvestor.post.json
                  type: !include schemas/LISAInvestor.post.schema.json
              responses:
                201:
                  description: The LISA investor resource has been created.
                  headers:
                    Location:
                      description: Relative URI to the created LISAAccount resource.
                      type: string
                      example: /investors/0987654321
                403:
                  body:
                    application/json:
                      description: The investor details given do not match with HMRC’s records
                      type: !include schemas/ErrorCodes.schema.json
                      example: |
                        {
                          "code": "investor-not-found",
                          "message": "The investor details are not present with HMRC and are unable to create a investor"
                        }

                409:
                  description: Matches already existing resource.
                    Response contains a location header with link to the existing resource.
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                        notOpenStatus:
                          description: The investor already has a record with HMRC
                          value: |
                            {
                              "code" : "investor-already-exists",
                              "message" : "The investor resource already exists. the existing InvestorId is returned"
                            }

      /accounts:
        description: !include documentation/LISAAccount
        post:
          is: [headers.acceptHeader, headers.contentHeader]
          description: !include documentation/LISAAccount
          displayName: Create or transfer a LISA account
          (annotations.scope): "write:lisa"
          securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
          body:
            application/json:
              type: !include schemas/LISAAccount.post.schema.json
              example: !include examples/LISAAccount.post.json
          responses:
            201:
              headers:
                Location:
                  description: URI to the created LISA account resource.
                  type: string
                  example: /lifetime-isa/manager/{lisaManagerReferenceNumber}/accounts/{accountId}
              body:
                application/json:
                  example: |
                     {
                       "data": {
                         "accountId": "8765432100",
                         "message": "Investor Account Created Late Notification",
                       },
                       "success": true,
                       "status": 201
                     }
            403:
              body:
                application/json:
                  type: !include schemas/ErrorCodes.schema.json
                  examples:
                    investorNotFound:
                      description: TODO short description of scenario
                      value: |
                        {
                          "code" : "investor-not-found",
                          "message" : "invalid status: must create with open status"
                        }
                    wrongLISAManager:
                      description: TODO short description of scenario
                      value: |
                        {
                          "code" : "wrong-lisa-manager",
                          "message" : "the lisaManagerReferenceNumber in URI does match match the calling LISAManager"
                        }
                    outsideAgeRange:
                      description: TODO short description of scenario
                      value: |
                        {
                          "code" : "Investor-Eligibility-Check-Failed",
                          "message" : "Can't open a LISA if investor is older than 40 or younger than 18"
                         }
                    complianceFail:
                      description: TODO short description of scenario
                      value: |
                        {
                          "code" : "Investor-Compliance-Check-Failed",
                          "message" : "Investor has an active account associated with another provider"
                        }
                    prevAccntDoNoExists:
                      description: TODO short description of scenario
                      value: |
                        {
                          "code" : "Previous-Investor-Account-Does-not-Exist",
                          "message" : "Previous Investor Account Doesn’t Exist"
                        }
            409:
              body:
                application/json:
                  description: The LISA account already exists
                  type: !include schemas/ErrorCodes.schema.json
                  example: |
                    {
                      "code": "Investor-Account-Already-Exists",
                      "message": "Investor Account Already Exists"
                    }
        /{accountID}:
              uriParameters:
                accountID:
                  type: IDtype
                  description: The ID for the account.  This will be generated by the LISAManager and will only
                    be unique when used in combination with lisaManagerReferenceNumber
                  example: "1234567890"

              put:
                  is: [headers.acceptHeader, headers.contentHeader]
                  displayName: Update an existing LISA account
                  description: Update an existing LISA account for closure of an LISA account.
                  (annotations.scope): "write:lisa"
                  securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                  body:
                    application/json:
                      type: !include schemas/LISAAccount.put.schema.json
                      example: !include examples/LISAAccount.put.close.json
                  responses:
                    200:
                      description: The account is updated successfully.
                    403:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            wrongLISAManager:
                              description: lisaManagerReferenceNumber does not match the calling LISA Manager
                              value: |
                                {
                                  "code" : "wrong-lisa-manager",
                                  "message" : "the lisaManagerReferenceNumber in URI does match match the calling LISAManager"
                                }
                            accountClosed:
                              description: Investor Account is already closed
                              value: |
                                {
                                  "code" : "Investor-Account-already-closed",
                                  "message" : "The Investor Account is already closed"
                                }

                    404:
                      body:
                        application/json:
                          description: The LISA account identified by the accountId does not exist
                          type: !include schemas/ErrorCodes.schema.json
                          example: |
                            {
                              "code": "Investor-Account-ID-Not-Found",
                              "message": "Investor-Account-ID-Not-Found"
                            }
              /events:
                    description: !include documentation/LifeEvent
                    post:
                      is: [headers.acceptHeader, headers.contentHeader]
                      displayName: Submit a life event.
                      description: submit information to notify a life event of lisa Investor who has an Lisa account.
                      (annotations.scope): "write:lisa"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                      body:
                        application/json:
                          type: !include schemas/LifeEvent.post.schema.json
                          example: !include examples/LifeEvent.post.json
                      responses:
                        201:
                          description: The LifeEvent resource has been created.
                          headers:
                            Location:
                              description: Relative URI to the created Life Event
                              type: string
                              example: /manager/Z876543210/accounts/1234567890/events/3333333333
                        403:
                          description: Matches already existing resource.
                            Response contains a location header with link to the existing resource.
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: The LISA manager or the LISA account do not belong to the calling LISA manage
                                  value: |
                                    {
                                      "code" : "wrong-lisa-manager",
                                      "message" : "The LISA manager or the LISA account do not belong to the calling LISA manager"
                                    }
                        409:
                          body:
                            application/json:
                              description: Conflict. The Investor Life Event already Exists.
                              type: !include schemas/ErrorCodes.schema.json
                              example: |
                                {
                                      "code" : "Life-Event-already-Exists",
                                      "message" : "Investor Life Event already Exists"
                                }

              /transactions:
                    description: !include documentation/LISATransaction
                    post:
                      is: [headers.acceptHeader, headers.contentHeader]
                      displayName: Request for bonus payment
                      description: Request for a bonus payment.
                      (annotations.scope): "write:lisa"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                      body:
                        application/json:
                          type: !include schemas/BonusPaymentRequest.post.schema.json
                          example: !include examples/BonusPaymentRequest.post.json
                      responses:
                        201:
                          description: The LISA transaction resource has been created.
                          headers:
                            Location:
                              description: Relative URI to the created LISA transaction resource
                              type: string
                              example: /manager/Z876543210/accounts/1234567890/transactions/3333333333
                        200:
                           body:
                              application/json:
                                example: |
                                   {
                                     "data": {
                                       "transactionId": "3333333333",
                                       "message": "Bonus transaction created - Late Notification",
                                     },
                                     "success": true,
                                     "status": 200
                                   }

                        403:
                          description: Matches already existing resource.
                            Response contains a location header with link to the existing resource.
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: TODO short description of scenario
                                  value: |
                                    {
                                      "code" : "wrong-lisa-manager",
                                      "message" : "The LISA manager or the LISA account do not belong to the calling LISA manager"
                                    }
                                noLifeEvent:
                                  description: Investor Life Event doesn’t Exist
                                  value: |
                                    {
                                      "code" : "Investor-Life-Event-doesn’t-Exist",
                                      "message" : "Investor Life Event doesn’t Exist"
                                    }
                                bonusWrong:
                                  description: Bonus Claim Error
                                  value: |
                                    {
                                      "code" : "Bonus-Claim-Error",
                                      "message" : "Bonus Claim Error"
                                    }
                        409:
                          body:
                            application/json:
                              description: Conflict. The LISA transaction resource already exists.
                                Updating of LISA transaction resources is not supported.
                              type: !include schemas/ErrorCodes.schema.json
                              example: |
                                {
                                  "code": "TODO",
                                  "message": "TODO"
                                }
